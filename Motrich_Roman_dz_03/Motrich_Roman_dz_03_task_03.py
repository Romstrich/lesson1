'''3. Написать функцию thesaurus(), принимающую в качестве аргументов
 имена сотрудников и возвращающую словарь, в котором ключи — первые буквы имен,
  а значения — списки, содержащие имена, начинающиеся с соответствующей буквы. Например:
thesaurus("Иван", "Мария", "Петр", "Илья")
{
    "И": ["Иван", "Илья"],
    "М": ["Мария"], "П": ["Петр"]
}
Подумайте: полезен ли будет вам оператор распаковки? Сможете ли вы вернуть
 отсортированный по ключам словарь?
'''

#office_names=['Иван','Ксения','София','кирилл','Виктор','Станислав','Виктория','светлана','арина','агрипина']

def thesaurus(*names):
    office_dict={}
    for i in names:
        if office_dict.get(i[0].upper())!=None:
            office_dict[i[0].upper()].append(i.capitalize())
        else:
            #pass
            office_dict[i[0].upper()]=[i.capitalize()]
    return sorted(office_dict.items())

print(thesaurus('Иван','Ксения','София','кирилл','Виктор','Станислав','Виктория','светлана','арина','агрипина'))
#print(sorted(thesaurus(office_names).items()))
# thes=thesaurus(office_names)
# for i in sorted(thes.keys()):
#     print(i,thes[i])
#Вернуть, как и хранить отсортированный словарь нельзя, по-моему,
#для этого необходимо использовать библиотеку,